name: condatest
on:
  push:
  pull_request:
  schedule:
    - cron: '30 9 * * 2'  # 09:30 every Tuesday

  workflow_dispatch:
    inputs:
      manual-debugging:
        type: boolean
        description: Launch manual debugging tmate session on failure
        default: false

jobs:

  build:
    strategy:
      #fail-fast: false
      matrix:
        include:
          - { os: ubuntu-20.04,      CC: gcc-10,   CXX: g++-10,     python: '3.9'  }
          - { os: ubuntu-latest,     CC: gcc2,   CXX: g++,          python: '3.11' }
          - { os: macos-latest,      CC: clang,    CXX: clang++,    python: "3.10" }
    name: ${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      CONDA_SOLVER: libmamba

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./src_co

      #we need actions and .yml files in the simplebuild-dgcode repo:
      - name: Checkout simplebuild-dgcode repo
        uses: actions/checkout@v4
        with:
          repository: mctools/simplebuild-dgcode
          path: ./src_co_sbdgcode

      - name: Setup conda environment
        uses: ./src_co_sbdgcode/.github/actions/setup
        with:
          PYTHON_VERSION: ${{ matrix.python }}
          USE_MAMBA: true
          CACHED_NOARCH_DEF_PY_FILE: ./src_co_sbdgcode/.github/resources/cached_noarch_definitions.py
          CONDA_ENV_FILE : ./src_co_sbdgcode/.github/resources/conda-setup.yml

      - name: Install dgcode
        run: |
          #not set -u due to conda
          set -e
          conda install --yes simple-build-dgcode
          echo "sb --version: "$(sb --version)
          echo "geant4 version: "$(geant4-config  --version)

###TMP      - name: Build and test Core only
###TMP        id: build-and-test-core-only
###TMP        run: |
###TMP          set -eu
###TMP          mkdir test_core && cd test_core
###TMP          sb --init core_val
###TMP          sb -t --testexcerpts=100 --requirepkg=CoreTests
###TMP
###TMP      - name: Build and test release mode
###TMP        id: build-and-test-release-mode
###TMP        run: |
###TMP          set -eu
###TMP          cd ./src_co
###TMP          sb -t --testexcerpts=100 --requirepkg=DGCodeRecommended,G4SimPlaneScatter
###TMP          sbenv sb_core_extdeps --require ZLib NCrystal Geant4
###TMP
###TMP      - name: Build-and-test-debug-mode
###TMP        id: build-and-test-debug-mode
###TMP        run: |
###TMP          set -eu
###TMP          echo TODO

      - name: Setup tmate session for manual debugging
        uses: mxschmitt/action-tmate@v3
        if: always() && inputs.manual-debugging == true && (steps.build-and-test-core-only.outcome != 'success' || steps.build-and-test-release-mode.outcome != 'success' || steps.build-and-test-debug-mode.outcome != 'success')
        with:
          limit-access-to-actor: true
