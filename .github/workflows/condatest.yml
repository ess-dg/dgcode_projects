name: condatest
on:
  push:
  pull_request:
  schedule:
    - cron: '30 9 * * 2'  # 09:30 every Tuesday

  workflow_dispatch:
    inputs:
      manual-debugging:
        type: boolean
        description: Launch manual debugging tmate session on failure
        default: false

jobs:

  build:
    strategy:
      #fail-fast: false
      matrix:
        include:
          - { os: ubuntu-20.04,      CC: gcc-10,   CXX: g++-10,     python: '3.9',   bldmode: 'release'  }
          - { os: ubuntu-latest,     CC: gcc2,     CXX: g++,        python: '3.11',  bldmode: 'debug' }
          - { os: macos-latest,      CC: clang,    CXX: clang++,    python: "3.10",  bldmode: 'release' }
    name: ${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}.${{ matrix.bldmode }}-bld
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      CONDA_SOLVER: libmamba
      THE_BLD_MODE: ${{ matrix.bldmode }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./src_co

      #we need a few files from .github in the simplebuild-dgcode repo:
      - name: Checkout simplebuild-dgcode repo
        uses: actions/checkout@v4
        with:
          repository: mctools/simplebuild-dgcode
          path: ./src_co_sbdgcode
          sparse-checkout: |
            .github

      - name: Setup conda environment
        uses: ./src_co_sbdgcode/.github/actions/setup
        with:
          PYTHON_VERSION: ${{ matrix.python }}
          USE_MAMBA: true
          CACHED_NOARCH_DEF_PY_FILE: ./src_co_sbdgcode/.github/resources/cached_noarch_definitions.py
          CONDA_ENV_FILE : ./src_co_sbdgcode/.github/resources/conda-setup.yml

      - name: Install dgcode
        run: |
          #not set -u due to conda
          set -e
          conda install --yes simple-build-dgcode
          echo "sb --version: "$(sb --version)
          echo "geant4 version: "$(geant4-config  --version)

      - name: Configure build mode
        id: configure-build-mode
        run: |
          set -eu
          cd ./src_co
          cat simplebuild.cfg |sed 's#^\s*mode\s*=\s*'"'release'#  mode = '${THE_BLD_MODE}'#" > sb_cfg_edited.cfg
          set -x
          diff simplebuild.cfg sb_cfg_edited.cfg || true
          mv -f sb_cfg_edited.cfg simplebuild.cfg

      - name: Build dgcode_projects
        id: build-dgcode-projects
        run: |
          set -eu
          cd ./src_co
          set -x
          python3 -c 'import _simple_build_system.cfglocate as cl; print(cl.locate_master_cfg_file())'
          cat simplebuild.cfg
          set +x
          sb --exportcmds cmds.json --requirepkg=DGCodeRecommended,G4SimPlaneScatter
          test -f cmds.json
          sbenv sb_core_extdeps --require ZLib NCrystal Geant4

      - name: Launch unit tests for dgcode_projects
        id: test-dgcode-projects
        run: |
          set -eu
          cd ./src_co
          sb -t --testexcerpts=100 --requirepkg=DGCodeRecommended,G4SimPlaneScatter
          sbenv sb_core_extdeps --require ZLib NCrystal Geant4

      - name: Install cppcheck
        run: conda install --yes cppcheck

      - name: Run cppcheck
        run: |
          set -eux
          cd ./src_co
          test -f cmds.json
          mkdir ./cppcheck_cache
          if [ "$RUNNER_OS" == "macOS" ]; then
            #macos runners are already slow enough
            export tmp_cppcheck_level="normal"
          else
            export tmp_cppcheck_level="exhaustive"
          fi
          cppcheck --inline-suppr --project=cmds.json --check-level=${tmp_cppcheck_level} -j4 --cppcheck-build-dir="$PWD"/cppcheck_cache -q --suppress='*:'"$CONDA_PREFIX"'/include/*' --error-exitcode=1

      - name: Setup tmate session for manual debugging
        uses: mxschmitt/action-tmate@v3
        if: always() && inputs.manual-debugging == true && (steps.build-and-test-core-only.outcome != 'success' || steps.build-and-test-release-mode.outcome != 'success' || steps.build-and-test-debug-mode.outcome != 'success')
        with:
          limit-access-to-actor: true
