#!/usr/bin/env python3

import csv
import xml.etree.ElementTree as ET
from LokiMantid.PixelIdConverters import Larmor2022GeometryConverter, Larmor2022TubeNumberingConverter

pixelPerStraw = 512
larmor2022Converter = Larmor2022GeometryConverter(pixelPerStraw)
tubeNumberingConverter = Larmor2022TubeNumberingConverter(pixelPerStraw)

def intersection(lst1, lst2):
    return list(set(lst1) & set(lst2))

fileList = ['maskFile.xml'] #input
convertOldNuberingToNewNumbering = False # For masks corresponding to the old pixel numbering (ICD v1)
pixelOffset = 1 #it used to be 11 for IDF containing monitors and detectors
outputFileName = 'mask_reduced_geom_px512_ssd4099_newNumbering.xml'

idIntersection = ()
for index, fileName in enumerate(fileList):
    tree = ET.parse(fileName)
    root = tree.getroot()
    #print(root.tag)
    groupElement = root.find('group')
    detidsElement = groupElement.find('detids')

    idStringList = list(detidsElement.text.split(","))
    idList_fullGeom = [int(idString)-pixelOffset for idString in idStringList]
    
    if convertOldNuberingToNewNumbering:
      idList_fullGeom = [tubeNumberingConverter.getNewPixelId(id) for id in idList_fullGeom]

    idList = [ id-larmor2022Converter.getReductionPixelOffset_newGeom(id)+pixelOffset for id in idList_fullGeom if larmor2022Converter.isPixelInLarmor2022Geom(id) ]

    if(index == 0):
        idIntersection = idList
    else:
        idIntersection = intersection(idIntersection, idList)

    print(f'file: {fileName}, number of masked IDs: {len(idList)}, intersected IDs: {len(idIntersection)}')

idIntersection.sort()
print(f'Final number of masked IDs (intersections): {len(idIntersection)}')

with open(outputFileName, 'w' ) as f:
    f.write('<?xml version="1.0"?>\n')
    f.write('<detector-masking>\n')
    f.write('\t<group>\n')
    f.write('\t\t<detids> ')
    writer = csv.writer(f)
    writer.writerow(idIntersection)
    f.write(' </detids>\n')
    f.write('\t</group>\n')
    f.write('</detector-masking>')
    f.close()
